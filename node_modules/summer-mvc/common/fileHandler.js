exports.fileHandler = function(){

  const Busboy = require( "busboy" );
  const path = require( "path" );
  const fs = require( "fs" );
  const mime = require( "mime" );




  this.uploadFile = function( req ){
    if( req.headers["content-type"] ){
      var i;
      var destDir = path.join( process.cwd() );

      for( i=1; i<arguments.length; i++ ){
        destDir = path.join( destDir, arguments[i].toString() );
        makeFolder( destDir );
      }

      console.log( "destDir : " + destDir );

      var busboy = new Busboy({ headers: req.headers });

      busboy.on("file", function(fieldname, file, filename, encoding, mimetype) {
        // console.log( fieldname, file, filename, encoding, mimetype );

        var saveTo = path.join( destDir, filename);
        console.log('Uploading: ' + saveTo);

        file.pipe(fs.createWriteStream(saveTo));
      });
      busboy.on("finish", function() {
        console.log('Upload complete');
        // res.writeHead(200, { 'Connection': 'close' });
        // res.end("That's all folks!");
      });

      return req.pipe(busboy);
    }
  }

  function makeFolder( pathStr ){

    try{
      fs.accessSync( pathStr );
    } catch( err ) {
      console.log( "[" + pathStr + "] disappears. Create Directory." );
      fs.mkdirSync( pathStr );
    }
  }

  this.downloadFile = function( req, res ){
    let originalFileName, savedFileName, savedPath, fileSize, dest, mimeType;

    originalFileName = "WAT-009.mp4";
    savedFileName = "WAT-009.mp4";
    savedPath = path.join( process.cwd(), "upload" );
    fileSize = "19000";

    dest = path.join( savedPath, savedFileName );
    mimeType = mime.lookup( dest );

    res.setHeader( "Content-disposition", "attachment; filename=" + originalFileName );
    res.setHeader( "Content-type", mimeType );

    // callback( null, { "originalFileName" : originalFileName, "savedPath" : savedPath, "savedFileName" : savedFileName } );
    return { "originalFileName" : originalFileName, "savedPath" : savedPath, "savedFileName" : savedFileName };
  }
}
